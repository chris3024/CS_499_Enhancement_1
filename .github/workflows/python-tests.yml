name: üêç  Python¬†tests

on:
  push:
    branches: [ main, master ]          # run on every push to your main branch
  pull_request:
    branches: [ main, master ]          # gate every PR
  workflow_dispatch:                     # allow manual re‚Äëruns from the UI

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]  # add/remove versions as you like

    steps:
      # 1.  Check out source
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2.  Install the version chosen by the matrix
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip                # pip cache ‚âà faster installs

      # 3.  Install project + test deps
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage
          # install any runtime deps listed in requirements.txt if present
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 4.  Run pytest with coverage
      - name: Run tests + coverage
        run: |
          coverage run -m pytest -q
          coverage xml                # generate coverage.xml for Codecov/Sonar

      # 5.  Upload HTML coverage report as a workflow artifact (optional but nice)
      - name: Upload coverage report
        if: always()                  # still upload even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-${{ matrix.python-version }}
          path: htmlcov               # coverage html output folder
          retention-days: 7

      # 6.  Upload coverage to Codecov (optional)
      #     Replace CODECOV_TOKEN secret once you sign up at https://about.codecov.io
      - name: Upload to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
